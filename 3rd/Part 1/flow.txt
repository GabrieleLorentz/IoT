[
    {
        "id": "60ff37d946452dfd",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1887cf450598ee79",
        "type": "inject",
        "z": "60ff37d946452dfd",
        "name": "Publisher Branch",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": "0",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 510,
        "y": 540,
        "wires": [
            [
                "3999e7d3688010ec"
            ]
        ]
    },
    {
        "id": "3999e7d3688010ec",
        "type": "function",
        "z": "60ff37d946452dfd",
        "name": "random_numbers",
        "func": "let SendingCount = global.get(\"SendingCount\") || 1;\n\nconst id = Math.floor(Math.random() * 30001);\nconst timestamp = Math.floor(Date.now() / 1000);\n\nmsg.payload = JSON.stringify({\n    \"No.\": SendingCount,\n    \"ID\": id,\n    \"TIMESTAMP\": timestamp\n});\n\nSendingCount++;\nglobal.set(\"SendingCount\", SendingCount);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 500,
        "wires": [
            [
                "d50671ef52328d54"
            ]
        ]
    },
    {
        "id": "9e3474c10c009a19",
        "type": "debug",
        "z": "60ff37d946452dfd",
        "name": "Json Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 480,
        "wires": []
    },
    {
        "id": "d50671ef52328d54",
        "type": "json",
        "z": "60ff37d946452dfd",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1010,
        "y": 480,
        "wires": [
            [
                "943ff717a6da1e3e"
            ]
        ]
    },
    {
        "id": "943ff717a6da1e3e",
        "type": "csv",
        "z": "60ff37d946452dfd",
        "name": "Parser",
        "spec": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "No.,ID,TIMESTAMP",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1170,
        "y": 480,
        "wires": [
            [
                "6f2c21ea6c52e911",
                "cbe6f8cb718f3a0c",
                "9e3474c10c009a19"
            ]
        ]
    },
    {
        "id": "6f2c21ea6c52e911",
        "type": "mqtt out",
        "z": "60ff37d946452dfd",
        "name": "publish",
        "topic": "challenge3/id_generator",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "017ef9966dd46acc",
        "x": 1440,
        "y": 400,
        "wires": []
    },
    {
        "id": "cbe6f8cb718f3a0c",
        "type": "file",
        "z": "60ff37d946452dfd",
        "name": "id_log.csv",
        "filename": "/home/simo/id_log.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1460,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "1129594823f676d4",
        "type": "inject",
        "z": "60ff37d946452dfd",
        "name": "Restart",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 690,
        "y": 360,
        "wires": [
            [
                "c8b81e239b77d2d3",
                "a23dde8982c181c0"
            ]
        ]
    },
    {
        "id": "c8b81e239b77d2d3",
        "type": "function",
        "z": "60ff37d946452dfd",
        "name": "Reset",
        "func": "global.set(\"ackCount\", 0);\nglobal.set(\"SendingCount\", 1)\nglobal.set(\"ReceivingCount\", 0);\nglobal.set(\"PubsCount\", 1);\nmsg.payload = [];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 340,
        "wires": [
            [
                "4d42e6775bbb6c23"
            ]
        ]
    },
    {
        "id": "a23dde8982c181c0",
        "type": "file in",
        "z": "60ff37d946452dfd",
        "name": "readCSV",
        "filename": "/home/simo/challenge3.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 780,
        "y": 240,
        "wires": [
            [
                "f48a56f22554a4ee"
            ]
        ]
    },
    {
        "id": "f48a56f22554a4ee",
        "type": "csv",
        "z": "60ff37d946452dfd",
        "name": "Challenge_3.csv",
        "spec": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "No.,Time,Source,Destination,Protocol,Length,Source Port,Destination Port,Info,Payload",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1050,
        "y": 220,
        "wires": [
            [
                "bc5aeda4a3802994"
            ]
        ]
    },
    {
        "id": "bc5aeda4a3802994",
        "type": "function",
        "z": "60ff37d946452dfd",
        "name": "Process_file",
        "func": "var dataArray = msg.payload;\nglobal.set(\"myData\", dataArray);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "1ab0a0bc87545363",
        "type": "mqtt in",
        "z": "60ff37d946452dfd",
        "name": "Receiver Branch",
        "topic": "challenge3/id_generator",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "017ef9966dd46acc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 700,
        "wires": [
            [
                "513529f50ab132e6"
            ]
        ]
    },
    {
        "id": "513529f50ab132e6",
        "type": "function",
        "z": "60ff37d946452dfd",
        "name": "Compute Number",
        "func": "let ReceivingCount = global.get(\"ReceivingCount\") || 0;\n\nif(ReceivingCount >= 80){\n    return null;\n}\n\nvar parts = msg.payload.split(',');\nvar id = parts[1];\n\n\nvar dataArray = global.get(\"myData\");\nvar desiredRow =id % 7711;\n\nvar matchingObject = dataArray.filter(function(item){\n    return parseInt(item[\"No.\"])===desiredRow;\n});\nmsg.payload = matchingObject;\n\nReceivingCount++;\nglobal.set(\"ReceivingCount\", ReceivingCount);\n\n\n\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 660,
        "wires": [
            [
                "7658295327bf7df4",
                "291b1f53071511aa",
                "ba1b59023ceed80a"
            ]
        ]
    },
    {
        "id": "7658295327bf7df4",
        "type": "debug",
        "z": "60ff37d946452dfd",
        "name": "Receiving Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 600,
        "wires": []
    },
    {
        "id": "291b1f53071511aa",
        "type": "function",
        "z": "60ff37d946452dfd",
        "name": "MQTT Filter",
        "func": "\nvar matchingObject = msg.payload;\nvar noValue = matchingObject[0][\"No.\"];\n\nif (matchingObject && matchingObject[0].Info.includes(\"Publish Message\")) {\n\n\n    var topics = matchingObject[0].Info.match(/\\[([^)]+)\\]/g);\n    var payload = matchingObject[0].Payload || \"\";\n\n    topics.forEach(function (topicRaw) {\n        var topic = topicRaw.replace(/[\\[\\]]/g, \"\"); \n\n        var publishMsg = {\n            topic: topic, // registering topic for communication\n            payload: {\n                \"timestamp\": Math.floor(Date.now() / 1000),\n                \"id\": noValue,\n                \"topic\": topic,\n                \"payload\": payload\n            }\n        };\n\n        node.send(publishMsg);\n    });\n\n} ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 720,
        "wires": [
            [
                "dfd84a813f4d0525"
            ]
        ]
    },
    {
        "id": "dfd84a813f4d0525",
        "type": "delay",
        "z": "60ff37d946452dfd",
        "name": "4 messages per minute",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "4",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1230,
        "y": 660,
        "wires": [
            [
                "f9870175d23c160b",
                "a9e8571d4fc7dc15",
                "904b1f1e42b2e9da"
            ]
        ]
    },
    {
        "id": "f9870175d23c160b",
        "type": "mqtt out",
        "z": "60ff37d946452dfd",
        "name": "MQTT PUBLISH",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "017ef9966dd46acc",
        "x": 1500,
        "y": 580,
        "wires": []
    },
    {
        "id": "904b1f1e42b2e9da",
        "type": "function",
        "z": "60ff37d946452dfd",
        "name": "Check Fahrenheit Temperature",
        "func": "var payloadStr = msg.payload.payload;\nif (!payloadStr) {\n    return null;\n}\n\nvar data = JSON.parse(payloadStr);\n\nif (data.type === \"temperature\" && data.unit === \"F\") {\n    return msg;\n} else {\n    return null;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630,
        "y": 660,
        "wires": [
            [
                "80464979e17b2f4e",
                "70d3b885857b3bb2",
                "3449a38e77137cb1"
            ]
        ]
    },
    {
        "id": "80464979e17b2f4e",
        "type": "function",
        "z": "60ff37d946452dfd",
        "name": "Plot",
        "func": "var dataObj = msg.payload.payload;\n\nvar data = JSON.parse(dataObj);\n\nif (data) {\n    let tempRange = data.range;\n    let tempValue = (tempRange[0] + tempRange[1]) / 2;\n    msg.payload = tempValue;\n    msg.topic = \"temperature\"; //overloaded topic to plot values as same line\n    return msg;\n\n} else {\n    return;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 560,
        "wires": [
            [
                "4d42e6775bbb6c23"
            ]
        ]
    },
    {
        "id": "4d42e6775bbb6c23",
        "type": "ui_chart",
        "z": "60ff37d946452dfd",
        "name": "Chart",
        "group": "57545cfa81764af3",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "Temperature",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1790,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "70d3b885857b3bb2",
        "type": "function",
        "z": "60ff37d946452dfd",
        "name": "filtered_pubs",
        "func": "let PubsCount = global.get(\"PubsCount\") || 1;\n\nvar dataObj=msg.payload.payload;\nvar data = JSON.parse(dataObj);\n\nvar long = data.long;\nvar lat = data.lat;\nlet tempRange = data.range;\nlet tempValue = (tempRange[0] + tempRange[1]) / 2;\nvar type=data.type;\nvar unit = data.unit;\nvar description = data.description;\n\nmsg.payload = JSON.stringify({\n    \"No.\": PubsCount,\n    \"LONG\": long,\n    \"LAT\":lat,\n    \"MEAN_VALUE\":tempValue,\n    \"TYPE\":type,\n    \"UNIT\":unit,\n    \"DESCRIPTION\":description,\n\n});\n\nPubsCount++;\nglobal.set(\"PubsCount\", PubsCount);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 800,
        "wires": [
            [
                "db7e52b79b555319",
                "f09cb72d41e0e09f"
            ]
        ]
    },
    {
        "id": "db7e52b79b555319",
        "type": "json",
        "z": "60ff37d946452dfd",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1970,
        "y": 880,
        "wires": [
            [
                "859e523d8244f18f"
            ]
        ]
    },
    {
        "id": "859e523d8244f18f",
        "type": "csv",
        "z": "60ff37d946452dfd",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "No.,LONG,LAT,MEAN_VALUE,TYPE,UNIT,DESCRIPTION",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 2090,
        "y": 800,
        "wires": [
            [
                "8cde20e582a2d40c"
            ]
        ]
    },
    {
        "id": "8cde20e582a2d40c",
        "type": "file",
        "z": "60ff37d946452dfd",
        "name": "filtered_pubs.csv",
        "filename": "/home/simo/filtered_pubs.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 2270,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "f09cb72d41e0e09f",
        "type": "debug",
        "z": "60ff37d946452dfd",
        "name": "pubs debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2030,
        "y": 700,
        "wires": []
    },
    {
        "id": "ba1b59023ceed80a",
        "type": "function",
        "z": "60ff37d946452dfd",
        "name": "filterAckMessage",
        "func": "var dataArray = global.get(\"myData\");\nvar ackCount = global.get(\"ackCount\") || 0;\nvar matchingObject = msg.payload;\nvar noValue = msg.payload[0][\"No.\"];\n\nif(matchingObject && matchingObject[0].Info.includes(\"Ack\")){\n\n\n    var ackContain = /(Connect|Publish|Subscribe|Unsubscribe)\\sAck/;\n    var msgTypeMatch = matchingObject[0].Info.match(ackContain);\n    var msgType = msgTypeMatch ? msgTypeMatch[0] : null;\n    msg.payload = JSON.stringify({\n        \"No.\":ackCount,\n        \"TIMESTAMP\": Math.floor(Date.now() / 1000),\n        \"SUB_ID\":noValue,\n        \"MSG_TYPE\":msgType\n    });\n\n    global.set(\"ackCount\", ackCount + 1);\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 920,
        "wires": [
            [
                "2173e2f3828feee2"
            ]
        ]
    },
    {
        "id": "2173e2f3828feee2",
        "type": "json",
        "z": "60ff37d946452dfd",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1150,
        "y": 860,
        "wires": [
            [
                "e5d8ecb56af50d2b"
            ]
        ]
    },
    {
        "id": "e5d8ecb56af50d2b",
        "type": "csv",
        "z": "60ff37d946452dfd",
        "name": "",
        "spec": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "No.,TIMESTAMP,SUB_ID,MSG_TYPE",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1330,
        "y": 840,
        "wires": [
            [
                "abaa3582e713fe79"
            ]
        ]
    },
    {
        "id": "abaa3582e713fe79",
        "type": "file",
        "z": "60ff37d946452dfd",
        "name": "ack_log.csv",
        "filename": "/home/simo/ack_log.csv",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1350,
        "y": 960,
        "wires": [
            [
                "0b19515349a0ba52"
            ]
        ]
    },
    {
        "id": "0b19515349a0ba52",
        "type": "function",
        "z": "60ff37d946452dfd",
        "name": "Sending AckCounter",
        "func": "let ackCount = global.get(\"ackCount\");\n\nmsg.payload = ackCount;\nmsg.url = \"https://api.thingspeak.com/update?api_key=W5QOZOG3FZYX7SN4&field1=\" + msg.payload; //ThingSpeak Channel\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 1060,
        "wires": [
            [
                "772bc9cda6264e6e",
                "da531bad52ec834c"
            ]
        ]
    },
    {
        "id": "772bc9cda6264e6e",
        "type": "debug",
        "z": "60ff37d946452dfd",
        "name": "Ack Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 1160,
        "wires": []
    },
    {
        "id": "da531bad52ec834c",
        "type": "http request",
        "z": "60ff37d946452dfd",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1650,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "a9e8571d4fc7dc15",
        "type": "debug",
        "z": "60ff37d946452dfd",
        "name": "MQTT DEBUG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1540,
        "y": 740,
        "wires": []
    },
    {
        "id": "3449a38e77137cb1",
        "type": "debug",
        "z": "60ff37d946452dfd",
        "name": "Plot Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1990,
        "y": 580,
        "wires": []
    },
    {
        "id": "01776e86c59cf14e",
        "type": "comment",
        "z": "60ff37d946452dfd",
        "name": "CLICK ON RESTART TO RESET EVERYTHING",
        "info": "",
        "x": 500,
        "y": 300,
        "wires": []
    },
    {
        "id": "017ef9966dd46acc",
        "type": "mqtt-broker",
        "name": "publish",
        "broker": "localhost",
        "port": "1884",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "57545cfa81764af3",
        "type": "ui_group",
        "name": "Default",
        "tab": "0ac55a66e3baff51",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "0ac55a66e3baff51",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]